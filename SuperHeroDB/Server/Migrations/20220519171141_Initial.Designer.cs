// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperHeroDB.Server.Data;

namespace SuperHeroDB.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220519171141_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperHeroDB.Shared.Comic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Comics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Marvel"
                        },
                        new
                        {
                            Id = 2,
                            Name = "DC"
                        });
                });

            modelBuilder.Entity("SuperHeroDB.Shared.Gener", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("MusicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MusicInformationId");

                    b.ToTable("Gener");
                });

            modelBuilder.Entity("SuperHeroDB.Shared.Music", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MusicAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MusicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MusicInformationId");

                    b.ToTable("Music");
                });

            modelBuilder.Entity("SuperHeroDB.Shared.MusicInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MusicInformation");
                });

            modelBuilder.Entity("SuperHeroDB.Shared.Nationality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MusicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MusicInformationId");

                    b.ToTable("Nationality");
                });

            modelBuilder.Entity("SuperHeroDB.Shared.Singer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MusicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NationalityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MusicInformationId");

                    b.HasIndex("NationalityId");

                    b.ToTable("Singer");
                });

            modelBuilder.Entity("SuperHeroDB.Shared.SuperHero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComicId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeroName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComicId");

                    b.ToTable("SuperHeroes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComicId = 1,
                            FirstName = "Peter",
                            HeroName = "Spiderman",
                            LastName = "Parker"
                        },
                        new
                        {
                            Id = 2,
                            ComicId = 2,
                            FirstName = "Bruce",
                            HeroName = "Batman",
                            LastName = "Wayne"
                        });
                });

            modelBuilder.Entity("SuperHeroDB.Shared.Gener", b =>
                {
                    b.HasOne("SuperHeroDB.Shared.MusicInformation", null)
                        .WithMany("Geners")
                        .HasForeignKey("MusicInformationId");
                });

            modelBuilder.Entity("SuperHeroDB.Shared.Music", b =>
                {
                    b.HasOne("SuperHeroDB.Shared.MusicInformation", "MusicInformation")
                        .WithMany()
                        .HasForeignKey("MusicInformationId");

                    b.Navigation("MusicInformation");
                });

            modelBuilder.Entity("SuperHeroDB.Shared.Nationality", b =>
                {
                    b.HasOne("SuperHeroDB.Shared.MusicInformation", null)
                        .WithMany("Nationalities")
                        .HasForeignKey("MusicInformationId");
                });

            modelBuilder.Entity("SuperHeroDB.Shared.Singer", b =>
                {
                    b.HasOne("SuperHeroDB.Shared.MusicInformation", null)
                        .WithMany("Singers")
                        .HasForeignKey("MusicInformationId");

                    b.HasOne("SuperHeroDB.Shared.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");

                    b.Navigation("Nationality");
                });

            modelBuilder.Entity("SuperHeroDB.Shared.SuperHero", b =>
                {
                    b.HasOne("SuperHeroDB.Shared.Comic", "Comic")
                        .WithMany()
                        .HasForeignKey("ComicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comic");
                });

            modelBuilder.Entity("SuperHeroDB.Shared.MusicInformation", b =>
                {
                    b.Navigation("Geners");

                    b.Navigation("Nationalities");

                    b.Navigation("Singers");
                });
#pragma warning restore 612, 618
        }
    }
}
